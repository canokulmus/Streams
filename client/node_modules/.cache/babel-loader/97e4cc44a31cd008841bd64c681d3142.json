{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\canok\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\ReactProject\\\\Streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StreamEdit = _ref => {\n  _s();\n\n  let {\n    stream,\n    fetchStream,\n    match\n  } = _ref;\n  // match comes from URL (for getting 'id')\n  useEffect(() => {\n    fetchStream(match.params.id);\n  }, []);\n\n  if (!stream) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Not found \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stream ? stream.title : \"not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_s(StreamEdit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StreamEdit;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamEdit\");","map":{"version":3,"names":["React","useEffect","connect","fetchStream","StreamEdit","stream","match","params","id","title","mapStateToProps","state","ownProps","streams"],"sources":["C:/Users/canok/OneDrive/Masaüstü/ReactProject/Streams/client/src/components/streams/StreamEdit.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nconst StreamEdit = ({ stream, fetchStream, match }) => {\r\n    // match comes from URL (for getting 'id')\r\n\r\n    useEffect(() => {\r\n        fetchStream(match.params.id);\r\n    }, []);\r\n\r\n    if (!stream) {\r\n        return <div> Not found </div>;\r\n    }\r\n\r\n    return <div>{stream ? stream.title : \"not found\"}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id],\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAU,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,MAAF;IAAUF,WAAV;IAAuBG;EAAvB,CAAmC;EACnD;EAEAL,SAAS,CAAC,MAAM;IACZE,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAX;EACH,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAI,CAACH,MAAL,EAAa;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBAAO;IAAA,UAAMA,MAAM,GAAGA,MAAM,CAACI,KAAV,GAAkB;EAA9B;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAZD;;GAAML,U;;KAAAA,U;;AAcN,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAO;IACHP,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAApC;EADL,CAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACQ,eAAD,EAAkB;EAAEP;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf"},"metadata":{},"sourceType":"module"}