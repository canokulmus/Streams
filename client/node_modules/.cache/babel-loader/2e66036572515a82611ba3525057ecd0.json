{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\canok\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\ReactProject\\\\Streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from \"flv.js\";\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  // refler sadece class componentlerde çalışır\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    const {\n      id\n    } = this.props.match.params;\n    this.player = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: \"100%\"\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","id","match","params","buildPlayer","player","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","width","mapStateToProps","state","ownProps","streams"],"sources":["C:/Users/canok/OneDrive/Masaüstü/ReactProject/Streams/client/src/components/streams/StreamShow.js"],"sourcesContent":["import React from \"react\";\r\nimport flv from \"flv.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream } from \"../../actions\";\r\n\r\nclass StreamShow extends React.Component {\r\n    // refler sadece class componentlerde çalışır\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    buildPlayer() {\r\n        if (this.player || !this.props.stream) {\r\n            return;\r\n        }\r\n        const { id } = this.props.match.params;\r\n\r\n        this.player = flv.createPlayer({\r\n            type: \"flv\",\r\n            url: `http://localhost:8000/live/${id}.flv`,\r\n        });\r\n\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading...</div>;\r\n        }\r\n\r\n        const { title, description } = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{ width: \"100%\" }} controls />\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;EACrC;EACAC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;EACH;;EAEDC,iBAAiB,GAAG;IAChB,MAAM;MAAEC;IAAF,IAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;IAEA,KAAKN,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBF,EAA/C;EACH;;EAEDG,WAAW,GAAG;IACV,IAAI,KAAKC,MAAL,IAAe,CAAC,KAAKR,KAAL,CAAWS,MAA/B,EAAuC;MACnC;IACH;;IACD,MAAM;MAAEL;IAAF,IAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;IAEA,KAAKE,MAAL,GAAcd,GAAG,CAACgB,YAAJ,CAAiB;MAC3BC,IAAI,EAAE,KADqB;MAE3BC,GAAG,EAAG,8BAA6BR,EAAG;IAFX,CAAjB,CAAd;IAKA,KAAKI,MAAL,CAAYK,kBAAZ,CAA+B,KAAKZ,QAAL,CAAca,OAA7C;IACA,KAAKN,MAAL,CAAYO,IAAZ;EACH;;EAEDC,MAAM,GAAG;IACL,IAAI,CAAC,KAAKhB,KAAL,CAAWS,MAAhB,EAAwB;MACpB,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;;IAED,MAAM;MAAEQ,KAAF;MAASC;IAAT,IAAyB,KAAKlB,KAAL,CAAWS,MAA1C;IAEA,oBACI;MAAA,wBACI;QAAO,GAAG,EAAE,KAAKR,QAAjB;QAA2B,KAAK,EAAE;UAAEkB,KAAK,EAAE;QAAT,CAAlC;QAAqD,QAAQ;MAA7D;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAKF;MAAL;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAKC;MAAL;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AA3CoC;;AA8CzC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAO;IAAEb,MAAM,EAAEY,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACjB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;EAAV,CAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAACyB,eAAD,EAAkB;EAAExB;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf"},"metadata":{},"sourceType":"module"}